cmake_minimum_required (VERSION 2.8)
project (logging)

option(OPTION_BUILD_SHARED "Build shared lib" ON)
option(OPTION_USE_TRACE_TCP "Logging to external application" ON)

find_package (Threads)

### this pigsquill is how the runtime library is set
#foreach(flag_var CMAKE_CXX_FLAGS CMAKE_CXX_FLAGS_DEBUG CMAKE_CXX_FLAGS_RELEASE CMAKE_CXX_FLAGS_MINSIZEREL CMAKE_CXX_FLAGS_RELWITHDEBINFO)
#   if(${flag_var} MATCHES "/MD")
#      string(REGEX REPLACE "/MD" "/MT" ${flag_var} "${${flag_var}}")
#   endif(${flag_var} MATCHES "/MD")
#endforeach(flag_var)

if(OPTION_BUILD_SHARED)
	message("Build: shared")
	add_definitions ("-DTRACE_DLL")
else(OPTION_BUILD_SHARED)
	message("Build: static")
	add_definitions ("-DTRACE_STATIC")
endif(OPTION_BUILD_SHARED)

add_definitions ("-DTRACE_CONFIG_INCLUDE=\"${CMAKE_CURRENT_SOURCE_DIR}/config.h\"")
add_definitions ("-DTRACE_LEVELS_INCLUDE=\"${CMAKE_CURRENT_SOURCE_DIR}/levels.h\"")
add_definitions ("-DTRACE_CONTEXTS_INCLUDE=\"${CMAKE_CURRENT_SOURCE_DIR}/contexts.h\"")
add_definitions ("-DTRACE_ENABLED")

include_directories ("../DbgToolkit/")
include_directories ("../DbgToolkit/include")

if(OPTION_USE_TRACE_TCP)
	# asio
	add_definitions("-DASIO_STANDALONE")
	include_directories ("../asio/include")
	set(NETWORKING_SOURCES 
		../DbgToolkit/trace_client/AsioSocketClient.cpp
		../DbgToolkit/trace_client/decoder.cpp
	)

	file (GLOB trace_proto_SOURCES "../DbgToolkit/trace_proto/generated/*.c") # these files are generated by asn1c from trace_proto.asn1
	include_directories(../DbgToolkit/trace_proto/generated/)
	add_definitions ("-DASSUMESTDTYPES") # asn1: use types from cstdint
	add_definitions ("-DUSE_CXX_ALLOCATOR") # asn1: use custom c++ allocator for encoder / decoder

	set_source_files_properties(${trace_proto_SOURCES} PROPERTIES LANGUAGE CXX)
else()
	add_definitions("-DTRACE_CLIENT_DISABLE_NETWORKING")
endif()


set(TRACE_FILES
	${NETWORKING_SOURCES}
	../DbgToolkit/trace_client/trace.cpp
	../DbgToolkit/trace_client/trace_client.cpp
	../DbgToolkit/trace_client/Client.cpp
	${CMAKE_CURRENT_SOURCE_DIR}/config.h
	${CMAKE_CURRENT_SOURCE_DIR}/levels.h
	${CMAKE_CURRENT_SOURCE_DIR}/contexts.h
)

add_definitions ("-D_CRT_SECURE_NO_WARNINGS") # msvc shut up pls

### replace options - Z7 == debug obj format without .pdb file
if(MSVC)
	foreach(flag_var CMAKE_CXX_FLAGS CMAKE_CXX_FLAGS_DEBUG CMAKE_CXX_FLAGS_RELEASE CMAKE_CXX_FLAGS_MINSIZEREL CMAKE_CXX_FLAGS_RELWITHDEBINFO)
		 if(${flag_var} MATCHES "/Zi")
				string(REGEX REPLACE "/Zi" "/Z7" ${flag_var} "${${flag_var}}")
		 endif(${flag_var} MATCHES "/Zi")
	endforeach(flag_var)
endif()
### end of pigsquill


if(OPTION_BUILD_SHARED)
	add_library (logging SHARED ${TRACE_FILES} ${trace_proto_SOURCES})
else(OPTION_BUILD_SHARED)
	add_library (logging STATIC ${TRACE_FILES} ${trace_proto_SOURCES})
endif(OPTION_BUILD_SHARED)


install (TARGETS logging LIBRARY DESTINATION lib  ARCHIVE DESTINATION lib RUNTIME DESTINATION bin)

if(MSVC)
	install(FILES ${PROJECT_BINARY_DIR}/Debug/logging.pdb
		DESTINATION bin
		CONFIGURATIONS Debug
		)
endif(MSVC)

